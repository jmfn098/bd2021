{"version":3,"sources":["services/auth-header.js","services/funcionario.service.js","components/Funcionarios/Funcionarios.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","token","API_URL","process","id","axios","get","headers","empresa","post","funcionario","put","delete","Funcionarios","empty","nombre","apellido","cedula","rfid","cargo","departamento","password","useState","message","setMessage","show","setShow","CRUD","setCRUD","setFuncionario","funcionarios","setFuncionarios","changeHandler","e","target","name","value","updateFuncionario","a","funcionarioService","response","data","traerFuncionarios","id_empresa","deleteFuncionario","useEffect","console","log","className","color","onClick","responsive","outlined","hover","itemsPerPage","tableFilter","sorter","onRowClick","_","omit","items","fields","pagination","clickableRows","onClose","shape","size","row","xs","onChange","type","then","catch","error"],"mappings":"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","file":"static/js/7.606baa17.chunk.js","sourcesContent":["export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"userComunidad\"));\n  if (user && user.token) {\n    // for Node.js Express back-end\n    return { \"x-access-token\": user.token };\n  } else {\n    return {};\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nlet baseURL = process.env.REACT_APP_DEV_PROXY;\nif (process.env.REACT_APP_ENV === \"production\") {\n  baseURL = process.env.REACT_APP_PROD_PROXY;\n}\nconst API_URL = `${baseURL}/api/funcionarios`;\nconst getFuncionarios = (id) => {\n  return axios.get(API_URL, { headers: authHeader() });\n};\nconst getFuncionario = (id) => {\n  return axios.get(API_URL + \"/\" + id, { headers: authHeader() });\n};\nconst createFuncionario = (empresa) => {\n  return axios.post(API_URL + \"/\", empresa, { headers: authHeader() });\n};\nconst updateFuncionario = (id, funcionario) => {\n  return axios.put(API_URL + \"/\" + id, funcionario, { headers: authHeader() });\n};\nconst deleteFuncionario = (id) => {\n  return axios.delete(API_URL + \"/\" + id, { headers: authHeader() });\n};\nexport default {\n  getFuncionarios,\n  getFuncionario,\n  createFuncionario,\n  updateFuncionario,\n  deleteFuncionario,\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport funcionarioService from \"../../services/funcionario.service\";\n\nimport _ from \"lodash\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDataTable,\n  CModal,\n  CLabel,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n} from \"@coreui/react\";\n\nconst Funcionarios = () => {\n  const empty = {\n    nombre: \"\",\n    apellido: \"\",\n    cedula: 0,\n    rfid: \"\",\n    cargo: \"\",\n    departamento: \"\",\n    password: \"\",\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [CRUD, setCRUD] = useState(\"create\");\n  const [funcionario, setFuncionario] = useState(empty);\n  const [funcionarios, setFuncionarios] = useState([]);\n  const changeHandler = (e) => {\n    setFuncionario({ ...funcionario, [e.target.name]: e.target.value });\n  };\n\n  const agregarFuncionario = () => {\n    funcionarioService\n      .createFuncionario(funcionario)\n      .then((response) => {\n        setMessage(response.data.message);\n        traerFuncionarios();\n      })\n      .catch((error) => setMessage(error.response.data.message));\n  };\n  const updateFuncionario = async () => {\n    const response = await funcionarioService.updateFuncionario(\n      funcionario.cedula,\n      funcionario\n    );\n    setMessage(response.data.message);\n    traerFuncionarios();\n  };\n  const editFuncionario = (e) => {\n    setCRUD(\"Actualizar\");\n    setFuncionario(_.omit(e, [\"updatedAt\", \"createdAt\", \"__v\"]));\n    setShow(true);\n  };\n  const traerFuncionarios = async () => {\n    const response = await funcionarioService.getFuncionarios(\n      funcionario.id_empresa\n    );\n    setFuncionarios(response.data);\n  };\n  const deleteFuncionario = async (id) => {\n    await funcionarioService.deleteFuncionario(funcionario.cedula);\n    setFuncionario(empty);\n    setShow(false);\n    traerFuncionarios();\n  };\n  useEffect(() => {\n    traerFuncionarios();\n    // eslint-disable-next-line\n  }, []);\n  console.log();\n  return (\n    <div>\n      <CCard>\n        <CCardHeader className=\"d-flex align-items-center justify-content-between\">\n          <div>Funcionarios</div>\n          <div>\n            <div>\n              <CButton\n                color=\"secondary\"\n                onClick={(e) => {\n                  setShow(true);\n                  setCRUD(\"Guardar\");\n                  setFuncionario(empty);\n                }}\n              >\n                Agregar Funcionario\n              </CButton>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CDataTable\n            responsive\n            outlined\n            hover\n            itemsPerPage={10}\n            tableFilter\n            sorter\n            onRowClick={editFuncionario}\n            items={funcionarios}\n            fields={[\n              \"nombre\",\n              \"apellido\",\n              \"cedula\",\n              \"departamento\",\n              \"cargo\",\n              \"rfid\",\n            ]}\n            pagination\n            clickableRows\n          />\n        </CCardBody>\n      </CCard>\n      <CModal\n        show={show}\n        onClose={() => {\n          setShow(false);\n          setMessage(\"\");\n          setFuncionario({});\n        }}\n      >\n        <CModalHeader>\n          <div>Información Básica</div>\n          {CRUD === \"Actualizar\" && (\n            <CButton\n              color=\"link\"\n              className=\"text-danger\"\n              shape=\"square\"\n              size=\"sm\"\n              onClick={(e) => {\n                deleteFuncionario(funcionario.cedula);\n              }}\n            >\n              Eliminar\n            </CButton>\n          )}\n        </CModalHeader>\n        <CModalBody>\n          <CForm>\n            <CFormGroup row>\n              <CCol xs=\"12\">Nombre</CCol>\n              <CCol>\n                <CInput\n                  name=\"nombre\"\n                  value={funcionario.nombre}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n            <CFormGroup row>\n              <CCol xs=\"12\">Apellido</CCol>\n              <CCol>\n                <CInput\n                  name=\"apellido\"\n                  value={funcionario.apellido}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>Cedula</CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"cedula\"\n                  type=\"number\"\n                  value={funcionario.cedula}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>Departamento</CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"departamento\"\n                  value={funcionario.departamento}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>Cargo</CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"cargo\"\n                  value={funcionario.cargo}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>RFID</CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"rfid\"\n                  value={funcionario.rfid}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>Password</CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"password\"\n                  value={funcionario.password}\n                  onChange={changeHandler}\n                />\n              </CCol>\n            </CFormGroup>\n\n            {message && (\n              <div\n                className=\"form-group\"\n                onClick={() => {\n                  setMessage(\"\");\n                }}\n              >\n                <div\n                  className={`alert alert-${\n                    message === \"Guardado con exito!\" ||\n                    message === \"Funcionario actualizado.\"\n                      ? \"success\"\n                      : \"danger\"\n                  }`}\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n          </CForm>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={\n              CRUD === \"Guardar\" ? agregarFuncionario : updateFuncionario\n            }\n          >\n            {CRUD}\n          </CButton>\n          <CButton\n            onClick={() => {\n              setShow(false);\n              setFuncionario(empty);\n              setMessage(\"\");\n            }}\n            color=\"secondary\"\n          >\n            Cancelar\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  );\n};\n\nexport default Funcionarios;\n"],"sourceRoot":""}