{"version":3,"sources":["services/auth-header.js","services/temperatura.service.js","components/Temperaturas/Temperaturas.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","token","API_URL","process","axios","get","headers","cedula","post","Temperaturas","useState","temperaturas","setTemperaturas","show","setShow","setCedula","loading","setLoading","temperatura","setTemperatura","traerTemperaturas","a","temperaturaService","response","data","medirTemp","message","useEffect","console","log","className","color","onClick","responsive","outlined","hover","itemsPerPage","tableFilter","sorter","items","fields","scopedSlots","funcionario","item","nombre","apellido","timestamp","Date","createdAt","toLocaleDateString","hour","minute","day","month","year","pagination","clickableRows","Modal","Header","Body","row","xs","name","type","value","onChange","e","target","Footer"],"mappings":"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","file":"static/js/8.4aeb9032.chunk.js","sourcesContent":["export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"userComunidad\"));\n  if (user && user.token) {\n    // for Node.js Express back-end\n    return { \"x-access-token\": user.token };\n  } else {\n    return {};\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\nlet baseURL = process.env.REACT_APP_DEV_PROXY;\nif (process.env.REACT_APP_ENV === \"production\") {\n  baseURL = process.env.REACT_APP_PROD_PROXY;\n}\nconst API_URL = `${baseURL}/api/temperaturas`;\nconst getTemperaturas = () => {\n  return axios.get(API_URL, { headers: authHeader() });\n};\nconst getTemperatura = (id) => {\n  return axios.get(API_URL + \"/\" + id, { headers: authHeader() });\n};\nconst createTemperatura = (cedula) => {\n  return axios.post(\n    API_URL + \"/\",\n    { cedula: cedula },\n    { headers: authHeader() }\n  );\n};\nconst updateTemperatura = (id, temperatura) => {\n  return axios.put(API_URL + \"/\" + id, temperatura, {\n    headers: authHeader(),\n  });\n};\nconst deleteTemperatura = (id) => {\n  return axios.delete(API_URL + \"/\" + id, { headers: authHeader() });\n};\nexport default {\n  getTemperaturas,\n  getTemperatura,\n  createTemperatura,\n  updateTemperatura,\n  deleteTemperatura,\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport temperaturaService from \"../../services/temperatura.service\";\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDataTable,\n  CInput,\n  CCol,\n  CForm,\n  CFormGroup,\n  CLabel,\n} from \"@coreui/react\";\nimport { Modal } from \"react-bootstrap\";\nconst Temperaturas = () => {\n  const [temperaturas, setTemperaturas] = useState([]);\n  const [show, setShow] = useState(false);\n  const [cedula, setCedula] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [temperatura, setTemperatura] = useState(\"\");\n  const traerTemperaturas = async () => {\n    const response = await temperaturaService.getTemperaturas();\n    setTemperaturas(response.data);\n  };\n  const medirTemp = async () => {\n    setLoading(true);\n    const response = await temperaturaService.createTemperatura(cedula);\n    if (response.data.temperatura) {\n      setTemperatura(response.data.temperatura);\n    } else {\n      setTemperatura(response.data.message);\n    }\n\n    setLoading(false);\n    traerTemperaturas();\n  };\n  useEffect(() => {\n    traerTemperaturas();\n    // eslint-disable-next-line\n  }, []);\n  console.log();\n  return (\n    <div>\n      <CCard>\n        <CCardHeader className=\"d-flex align-items-center justify-content-between\">\n          <div>Temperaturas</div>\n          <div>\n            <CButton\n              color=\"primary\"\n              onClick={() => {\n                setShow(true);\n              }}\n            >\n              Medir Temperatura\n            </CButton>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <CDataTable\n            responsive\n            outlined\n            hover\n            itemsPerPage={10}\n            tableFilter\n            sorter\n            items={temperaturas}\n            fields={[\"funcionario\", \"cedula\", \"temperatura\", \"timestamp\"]}\n            scopedSlots={{\n              funcionario: (item) => (\n                <td>\n                  {item?.funcionario?.nombre +\n                    \" \" +\n                    item?.funcionario?.apellido}\n                </td>\n              ),\n              cedula: (item) => <td>{item?.funcionario?.cedula}</td>,\n              temperatura: (item) => <td>{item.temperatura} °C</td>,\n              timestamp: (item) => (\n                <td>\n                  {new Date(item.createdAt).toLocaleDateString(\"es-PY\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    day: \"2-digit\",\n                    month: \"short\",\n                    year: \"numeric\",\n                  })}\n                </td>\n              ),\n            }}\n            pagination\n            clickableRows\n          />\n        </CCardBody>\n      </CCard>\n      <Modal show={show}>\n        <Modal.Header>Marca de temperatura</Modal.Header>\n        <Modal.Body>\n          <CForm>\n            <CFormGroup row>\n              <CCol xs=\"12\">\n                <CLabel>\n                  Ingrese Cedula o acerque su tarjeta de identificación\n                </CLabel>\n              </CCol>\n              <CCol>\n                <CInput\n                  name=\"cedula\"\n                  type=\"number\"\n                  value={cedula}\n                  onChange={(e) => {\n                    setCedula(e.target.value);\n                  }}\n                />\n              </CCol>\n            </CFormGroup>\n          </CForm>\n          <div className=\"text-center\">\n            {loading && (\n              <span className=\"spinner-border spinner-border-lg mx-1\"></span>\n            )}\n            {temperatura &&\n              typeof temperatura === \"number\" &&\n              `Su temperatura es ${temperatura}`}\n\n            {temperatura && (\n              <div className=\"form-group\">\n                <div\n                  className={`alert alert-${\n                    temperatura < 37 ? \"success\" : \"danger\"\n                  }`}\n                >\n                  {typeof temperatura !== \"string\"\n                    ? temperatura < 37\n                      ? \"Normal\"\n                      : \"Peligro\"\n                    : temperatura}\n                </div>\n              </div>\n            )}\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <CButton\n            color=\"secondary\"\n            onClick={() => {\n              setShow(false);\n              setTemperatura(\"\");\n              setLoading(false);\n              setCedula(0);\n            }}\n          >\n            Cancelar\n          </CButton>\n          <CButton onClick={medirTemp} color=\"primary\">\n            Guardar\n          </CButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Temperaturas;\n"],"sourceRoot":""}